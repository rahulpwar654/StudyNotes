OOPs Concepts

1.Object
2.Class
3.Inheritance
4.Polymorphism
5.Abstraction
6.Encapsulation

Object

Any entity that has state and behavior is known as an object. For example, a chair, pen, table, keyboard, bike, etc. It can be physical or logical.


Class
Collection of objects is called class. It is a logical entity

Inheritance
When one object acquires all the properties and behaviors of a parent object, it is known as inheritance.
 It provides code reusability. It is used to achieve runtime polymorphism.
 
 
Polymorphism
If one task is performed in different ways, it is known as polymorphism. 
For example: to convince the customer differently, to draw something, for example, shape, triangle, rectangle, etc.
In Java, we use method overloading and method overriding to achieve polymorphism.


Abstraction
Hiding internal details and showing functionality is known as abstraction. 
For example phone call, we don't know the internal processing.
In Java, we use abstract class and interface to achieve abstraction.


Encapsulation
Binding (or wrapping) code and data together into a single unit are known as encapsulation. 
For example, a capsule, it is wrapped with different medicines.
A java class is the example of encapsulation. Java bean is the fully encapsulated class because all the data members are private here.